{
  "version": 3,
  "sources": ["../script.js"],
  "sourcesContent": ["const images = [\r\n  \"images/images.jpg\",\r\n  \"images/images.png\",\r\n  \"images/images1.jpg\",\r\n  \"images/images1.png\",\r\n  \"images/images2.jpg\",\r\n  \"images/images2.png\",\r\n  \"images/images3.jpg\",\r\n  \"images/images3.png\",\r\n  \"images/images4.jpg\",\r\n  \"images/images5.jpg\",\r\n  \"images/images6.jpg\",\r\n  \"images/images7.jpg\",\r\n  \"images/images9.jpg\",\r\n  \"images/images10.png\",\r\n  \"images/images11.jpg\",\r\n  \"images/images12.jpg\",\r\n  \"images/images13.jpg\",\r\n  \"images/images14.jpg\",\r\n  \"images/images15.jpg\",\r\n  \"images/images16.jpg\",\r\n  \"images/images17.jpg\",\r\n];\r\n\r\nfunction RandomImage() {\r\n  var randomPick = Math.floor(Math.random() * images.length);\r\n  var randomImage = images[randomPick];\r\n\r\n  return randomImage;\r\n}\r\n\r\n// function Initial() {\r\n//   var container = document.createElement(\"div\");\r\n//   container.className = \"image-container\";\r\n\r\n//   var img = document.createElement(\"img\");\r\n//   img.src = RandomImage();\r\n\r\n//   container.appendChild(img);\r\n//   gallery.appendChild(container);\r\n//   return container;\r\n// }\r\n\r\n// var Options = {\r\n//   threshold: 0.3,\r\n// };\r\n\r\n// const observer = new IntersectionObserver(function () {\r\n\r\n// if ()\r\n\r\n//   if (window.innerHeight + window.scrollY >= document.body.offsetHeight)\r\n//     {\r\n//       console.log(\"Test\")\r\n//       observer.unobserve(Empty)\r\n//       }\r\n//       console.log(\"hello hello\")\r\n//       LoadMore()\r\n\r\n// }, Options);\r\n\r\n// observer.observe(Empty);\r\n\r\n// function LoadMore() {\r\n//   var container = document.createElement(\"div\");\r\n//   container.className = \"image-container\";\r\n\r\n//   var img = document.createElement(\"img\");\r\n//   img.src = RandomImage();\r\n\r\n//   container.appendChild(img);\r\n//   gallery.appendChild(container);\r\n\r\n//   observer.observe(Empty);\r\n//   return container;\r\n// }\r\n\r\n// document.querySelectorAll(\".image-container\").forEach((container) => {\r\n//   observer.observe(container);\r\n// });\r\n\r\n// window.addEventListener(\"scroll\", () => {\r\n//   if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\r\n//     Initial();\r\n//   }\r\n// });\r\n\r\nlet isLoading = false;\r\n\r\nfunction loadMore() {\r\n  if (isLoading) return;\r\n  isLoading = true;\r\n  \r\n  load.style.display = \"block\";\r\n  setTimeout(function () {\r\n    for (let i = 0; i < 5; i++) {\r\n      var container = document.createElement(\"div\");\r\n      container.className = \"image-container\";\r\n\r\n      var img = document.createElement(\"img\");\r\n      img.src = RandomImage();\r\n\r\n      container.appendChild(img);\r\n      gallery.appendChild(container);\r\n    }\r\n    isLoading = false;\r\n    load.style.display = \"none\";\r\n  }, 700);\r\n}\r\n\r\n//setInterval(function(){console.log(\"123\")}, 1000)\r\n\r\nconst observer = new IntersectionObserver(\r\n  (entries) => {\r\n    entries.forEach((entry) => {\r\n  \r\n      if (entry.isIntersecting) {\r\n        loadMore();\r\n      }\r\n    });\r\n  }\r\n);\r\n\r\nobserver.observe(Empty);\r\n"],
  "mappings": "qFAAA,IAAMA,EAAS,CACb,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACF,EAEA,SAASC,GAAc,CACrB,IAAIC,EAAa,KAAK,MAAM,KAAK,OAAO,EAAIF,EAAO,MAAM,EACrDG,EAAcH,EAAOE,CAAU,EAEnC,OAAOC,CACT,CALSC,EAAAH,EAAA,eA+DT,IAAII,EAAY,GAEhB,SAASC,GAAW,CACdD,IACJA,EAAY,GAEZ,KAAK,MAAM,QAAU,QACrB,WAAW,UAAY,CACrB,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAIE,EAAY,SAAS,cAAc,KAAK,EAC5CA,EAAU,UAAY,kBAEtB,IAAIC,EAAM,SAAS,cAAc,KAAK,EACtCA,EAAI,IAAMP,EAAY,EAEtBM,EAAU,YAAYC,CAAG,EACzB,QAAQ,YAAYD,CAAS,CAC/B,CACAF,EAAY,GACZ,KAAK,MAAM,QAAU,MACvB,EAAG,GAAG,EACR,CAnBSD,EAAAE,EAAA,YAuBT,IAAMG,EAAW,IAAI,qBAClBC,GAAY,CACXA,EAAQ,QAASC,GAAU,CAErBA,EAAM,gBACRL,EAAS,CAEb,CAAC,CACH,CACF,EAEAG,EAAS,QAAQ,KAAK",
  "names": ["images", "RandomImage", "randomPick", "randomImage", "__name", "isLoading", "loadMore", "container", "img", "observer", "entries", "entry"]
}
